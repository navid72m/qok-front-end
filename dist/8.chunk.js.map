{"version":3,"file":"8.chunk.js","sources":["webpack:///./src/app/cminer/cminer.module.ts","webpack:///./src/app/shared/categories.model.ts?65a7**","webpack:///./~/angular2-notifications/src/simple-notifications/services/notifications.service.ts?e252**","webpack:///./~/angular2-notifications/src/simple-notifications/interfaces/icons.ts?7523**","webpack:///./src/app/user/search/search.service.ts?e61e*","webpack:///./src/app/cminer/cminer.service.ts","webpack:///./src/app/cminer/question/question.component.ts","webpack:///./src/app/cminer/cminer-routing.module.ts","webpack:///./src/app/cminer/question/question.model.ts","webpack:///./src/app/cminer/question/question.component.css","webpack:///./src/app/cminer/question/question.component.html","webpack:///./src/app/cminer/question/question.component.css?2db9"],"sourcesContent":["import { NgModule }     from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { requestOptionsProvider } from '../default-request-options.service';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\nimport {CminerRoutingModule} from './cminer-routing.module';\r\nimport { QuestionComponent} from './question/question.component';\r\nimport {NotificationsService} from \"angular2-notifications/src/simple-notifications/services/notifications.service\";\r\nimport {UpdateComponent} from \"./update/update.component\";\r\nimport 'hammerjs';\r\nimport {CminerService} from \"./cminer.service\";\r\nimport {SearchService} from \"../user/search/search.service\";\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CminerRoutingModule,\r\n        SharedModule,\r\n\r\n\r\n\r\n    ],\r\n    declarations: [\r\n        QuestionComponent,\r\n\r\n\r\n    ],\r\n    providers: [\r\n        requestOptionsProvider,\r\n        AuthGuard,\r\n        CminerService,\r\n        NotificationsService,\r\n        SearchService\r\n\r\n\r\n\r\n    ],\r\n    entryComponents: [\r\n\r\n    ],\r\n})\r\nexport class CminerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/cminer/cminer.module.ts","export const CATEGORIES: Array <{title : string, engtitle: string, id: number}> =[\r\n\t{  title:'سینما' ,                 engtitle: \"cinema\",             id : 2      },\r\n\t{  title:\"برنامه های تلویزیونی\" ,  engtitle: \"TV\",                 id : 3      },\r\n\t{  title:\"ادبیات\" ,                engtitle: \"literature\",         id : 4      },\r\n\t{  title:\"موسیقی\" ,                 engtitle: \"music\",              id : 6      },\r\n\t{  title:\"تاریخ\" ,                  engtitle: \"history\",            id : 9      },\r\n\t{  title:\"زبان انگلیسی\",            engtitle: \"english\",            id : 10     },\r\n\t{  title:\"تکنولوژی\" ,               engtitle: \"technology\",         id : 12     },\r\n\t{  title:\"علم و دانش\" ,             engtitle: \"science\",            id : 13     },\r\n\t{  title:\"جغرافیا\" ,                engtitle: \"geography\",          id : 17     },\r\n\t{  title:\"فرهنگ و هنر\" ,            engtitle: \"art\",                id : 20     },\r\n\t{  title:\"بازیهای کامپیوتری\" ,      engtitle: \"computer_game\",      id : 22     },\r\n\t{  title:\"اطلاعات عمومی\" ,           engtitle: \"general_knowledge\",  id : 23     },\r\n\t{  title:\"ورزشی\" ,                  engtitle: \"sport\",              id : 29     },\r\n\t{  title:\"طبیعت\" ,                  engtitle: \"nature\",             id : 41     },\r\n\t{  title:\"مذهبی\" ,                  engtitle: \"religious\",          id : 88     },\r\n\t{  title:\"ریاضی و هوش\" ,            engtitle: \"math\",               id : 139    },\r\n\t{  title:\"لوگو و سرگرمی\" ,          engtitle: \"logo\",               id : 140    },\r\n\t{  title:\"غذا و نوشیدنی\" ,          engtitle: \"food\",               id : 141    },\r\n\t{  title:\"فوتبال\" ,                engtitle: \"football\",           id : 142    },\r\n]\r\n\r\nexport const CATEGORIES_bool: Array <{title : string, engtitle: string, id: number, checked: boolean}> =[\r\n\t{  title:' سینما' ,                 engtitle: \"cinema\",             id : 2     ,\tchecked : true },\r\n\t{  title:\" برنامه های تلویزیونی\" ,  engtitle: \"TV\",                 id : 3     ,\tchecked : true },\r\n\t{  title:\" ادبیات\" ,                engtitle: \"literature\",         id : 4     ,\tchecked : true},\r\n\t{  title:\"موسیقی\" ,                 engtitle: \"music\",              id : 6     ,\tchecked : true },\r\n\t{  title:\"تاریخ\" ,                  engtitle: \"history\",            id : 9     ,\tchecked : true },\r\n\t{  title:\"زبان انگلیسی\",            engtitle: \"english\",            id : 10    ,\tchecked : true },\r\n\t{  title:\"تکنولوژی\" ,               engtitle: \"technology\",         id : 12    ,\tchecked : true },\r\n\t{  title:\"علم و دانش\" ,             engtitle: \"science\",            id : 13    ,\tchecked : true },\r\n\t{  title:\"جغرافیا\" ,                engtitle: \"geography\",          id : 17    ,\tchecked : true },\r\n\t{  title:\"فرهنگ و هنر\" ,            engtitle: \"art\",                id : 20    ,\tchecked : true },\r\n\t{  title:\"بازیهای کامپیوتری\" ,      engtitle: \"computer_game\",      id : 22    ,\tchecked : true },\r\n\t{  title:\"اطلاعات عمومی\" ,           engtitle: \"general_knowledge\",  id : 23    ,\tchecked : true },\r\n\t{  title:\"ورزشی\" ,                  engtitle: \"sport\",              id : 29    ,\tchecked : true },\r\n\t{  title:\"طبیعت\" ,                  engtitle: \"nature\",             id : 41    ,\tchecked : true },\r\n\t{  title:\"مذهبی\" ,                  engtitle: \"religious\",          id : 88    ,\tchecked : true },\r\n\t{  title:\"ریاضی و هوش\" ,            engtitle: \"math\",               id : 139   ,\tchecked : true },\r\n\t{  title:\"لوگو و سرگرمی\" ,          engtitle: \"logo\",               id : 140   ,\tchecked : true },\r\n\t{  title:\"غذا و نوشیدنی\" ,          engtitle: \"food\",               id : 141   ,\tchecked : true },\r\n\t{  title:\"فوتبال \" ,                engtitle: \"football\",           id : 142   ,\tchecked : true },\r\n]\r\n\r\nexport const CATEGORIES_bool_false: Array <{title : string, engtitle: string, id: number, checked: boolean}> =[\r\n\t{  title:' سینما' ,                 engtitle: \"cinema\",             id : 2     ,\tchecked : false },\r\n\t{  title:\" برنامه های تلویزیونی\" ,  engtitle: \"TV\",                 id : 3     ,\tchecked : false },\r\n\t{  title:\" ادبیات\" ,                engtitle: \"literature\",         id : 4     ,\tchecked : false},\r\n\t{  title:\"موسیقی\" ,                 engtitle: \"music\",              id : 6     ,\tchecked : false },\r\n\t{  title:\"تاریخ\" ,                  engtitle: \"history\",            id : 9     ,\tchecked : false },\r\n\t{  title:\"زبان انگلیسی\",            engtitle: \"english\",            id : 10    ,\tchecked : false },\r\n\t{  title:\"تکنولوژی\" ,               engtitle: \"technology\",         id : 12    ,\tchecked : false },\r\n\t{  title:\"علم و دانش\" ,             engtitle: \"science\",            id : 13    ,\tchecked : false },\r\n\t{  title:\"جغرافیا\" ,                engtitle: \"geography\",          id : 17    ,\tchecked : false },\r\n\t{  title:\"فرهنگ و هنر\" ,            engtitle: \"art\",                id : 20    ,\tchecked : false },\r\n\t{  title:\"بازیهای کامپیوتری\" ,      engtitle: \"computer_game\",      id : 22    ,\tchecked : false },\r\n\t{  title:\"اطلاعات عمومی\" ,           engtitle: \"general_knowledge\",  id : 23    ,\tchecked : false },\r\n\t{  title:\"ورزشی\" ,                  engtitle: \"sport\",              id : 29    ,\tchecked : false },\r\n\t{  title:\"طبیعت\" ,                  engtitle: \"nature\",             id : 41    ,\tchecked : false },\r\n\t{  title:\"مذهبی\" ,                  engtitle: \"religious\",          id : 88    ,\tchecked : false },\r\n\t{  title:\"ریاضی و هوش\" ,            engtitle: \"math\",               id : 139   ,\tchecked : false },\r\n\t{  title:\"لوگو و سرگرمی\" ,          engtitle: \"logo\",               id : 140   ,\tchecked : false },\r\n\t{  title:\"غذا و نوشیدنی\" ,          engtitle: \"food\",               id : 141   ,\tchecked : false },\r\n\t{  title:\"فوتبال \" ,                engtitle: \"football\",           id : 142   ,\tchecked : false },\r\n]\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/shared/categories.model.ts","import {Injectable, EventEmitter} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {NotificationEvent} from '../interfaces/notification-event.type';\r\nimport {Notification} from '../interfaces/notification.type';\r\nimport {Icons, defaultIcons} from '../interfaces/icons';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n\r\n  private emitter: Subject<NotificationEvent> = new Subject<NotificationEvent>();\r\n  private icons: Icons = defaultIcons;\r\n\r\n  set(notification: Notification, to: boolean) {\r\n    notification.id = notification.override && notification.override.id ? notification.override.id : Math.random().toString(36).substring(3);\r\n    notification.click = new EventEmitter<{}>();\r\n    this.emitter.next({command: 'set', notification: notification, add: to});\r\n    return notification;\r\n  };\r\n\r\n  getChangeEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  //// Access methods\r\n  success(title: string, content?: string, override?: any) {\r\n    return this.set({title: title, content: content || '', type: 'success', icon: this.icons.success, override: override}, true);\r\n  }\r\n\r\n  error(title: string, content?: string, override?: any) {\r\n    return this.set({title: title, content: content || '', type: 'error', icon: this.icons.error, override: override}, true);\r\n  }\r\n\r\n  alert(title: string, content?: string, override?: any) {\r\n    return this.set({title: title, content: content || '', type: 'alert', icon: this.icons.alert, override: override}, true);\r\n  }\r\n\r\n  info(title: string, content?: string, override?: any) {\r\n    return this.set({title: title, content: content || '', type: 'info', icon: this.icons.info, override: override}, true);\r\n  }\r\n\r\n  bare(title: string, content?: string, override?: any) {\r\n    return this.set({title: title, content: content || '', type: 'bare', icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // With type method\r\n  create(title: string, content: string, type: string, override?: any) {\r\n    return this.set({title: title, content: content, type: type, icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // HTML Notification method\r\n  html(html: any, type: string, override?: any) {\r\n    return this.set({html: html, type: type, icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // Remove all notifications method\r\n  remove(id?: string) {\r\n    if (id) this.emitter.next({command: 'clean', id: id});\r\n    else this.emitter.next({command: 'cleanAll'});\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./~/angular2-notifications/src/simple-notifications/services/notifications.service.ts","export interface Icons {\r\n  alert: string;\r\n  error: string;\r\n  info: string;\r\n  success: string;\r\n}\r\n\r\nexport const defaultIcons: Icons = {\r\n  alert: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n        </svg>`,\r\n\r\n  error: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\r\n        </svg>\r\n    `,\r\n  info: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\r\n        </svg>\r\n    `,\r\n  success: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\r\n        </svg>\r\n    `\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./~/angular2-notifications/src/simple-notifications/interfaces/icons.ts","import { Injectable } from '@angular/core';\r\nimport { RequestOptions, Headers, Http, Response } from '@angular/http';\r\n\r\nimport {RecipeList, UserSearch} from './search.model';\r\nimport { ClanSearch } from './search.model';\r\n\r\nimport {\r\n\tUserSearchURL,\r\n\tUserSearchLevenURL,\r\n\tSearchClanMembers,\r\n\tSearchClanMembers1,\r\n\tSearchRecipeUrl\r\n} from '../../config';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport * as leven from 'js-levenshtein';\r\n// const levenshtein = require('js-levenshtein');\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n\tprivate headers = new Headers({'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8'});\r\n\tprivate options = new RequestOptions({ headers: this.headers });\r\n\r\n\tconstructor(private http: Http) { }\r\n\r\n\tsearch(name: string, code: string): Promise<UserSearch[]> {\r\n\t\tvar body = { username: name, code: code }\r\n\t\treturn this.http\r\n\t\t\t.post(UserSearchURL, JSON.stringify(body), this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tleven(name: string): Promise<UserSearch[]> {\r\n\t\tvar body = { username: name }\r\n\t\treturn this.http\r\n\t\t\t.post(UserSearchLevenURL, JSON.stringify(body), this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractLevenData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tgetClans(title: string): Promise<ClanSearch[]> {\r\n\t\tvar body = { title: title };\r\n\t\treturn this.http\r\n\t\t\t.post(SearchClanMembers, JSON.stringify(body), this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractClanData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tgetRecipe(data): Promise<RecipeList[]> {\r\n\t\treturn this.http\r\n\t\t\t.post(SearchRecipeUrl, JSON.stringify(data), this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractRecipeData)\r\n\t\t\t.catch(this.handleError);\r\n\r\n\t}\r\n\tprivate extractRecipeData(res: Response) {\r\n\t\tlet body = res.json();\r\n\r\n\t\tif (body.status == true) {\r\n\t\t\treturn body.data.payments || [];\r\n\t\t} else {\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tprivate extractData(res: Response) {\r\n\t\tlet body = res.json();\r\n\r\n\t\tif (body.status == true) {\r\n\t\t\treturn body.data.users || [];\r\n\t\t} else {\r\n\t\t\treturn []\r\n\t\t}\t\r\n\t}\r\n\r\n\tprivate extractLevenData(res: Response) {\r\n\t\tlet body = res.json();\r\n\t\t\r\n\t\treturn body.players || [];\r\n\t}\t\r\n\r\n\tprivate extractClanData(res: Response) {\r\n\t\tlet body = res.json();\r\n\t//\tconsole.log(body)\r\n\t\treturn body.clans || [];\r\n\t}\r\n\r\n\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('An error occurred', error);\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/user/search/search.service.ts","import { Injectable } from '@angular/core';\r\nimport {RequestOptions, Headers, Http, Response, ResponseContentType} from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport {\r\n\tAcceptedStatusQuestionUrl,\r\n\tRejectedStatusQuestionUrl,\r\n\tSingleQuestionViewUrl, UpdateQuestionCategoryUrl,\r\n\tUpdateQuestionUrl,\r\n\tUserQuestionsViewUrl\r\n} from \"../config\";\r\nimport {UpdateQuestionCategory, UpdateQuestionModel, UserQuestionResponseModel} from \"./question/question.model\";\r\n\r\n\r\n@Injectable()\r\nexport class CminerService {\r\n\tprivate headers = new Headers({'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\tprivate options = new RequestOptions({ headers: this.headers });\r\n\r\n\tconstructor(private http: Http) { }\r\n\r\n\tviewUserQuestionService(data):Promise<UserQuestionResponseModel> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t    let test = new FormData();\r\n\t\ttest.append('player_id',data.player_id);\r\n\t\treturn this.http\r\n\t\t\t.post(UserQuestionsViewUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\tSingleSearchQuestionService(data):Promise<UserQuestionResponseModel> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t\tlet test = new FormData();\r\n\t\ttest.append('id',data.id);\r\n\t\treturn this.http\r\n\t\t\t.post(SingleQuestionViewUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\tUpdateQuestuinService(data):Promise<UpdateQuestionModel> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t\tlet test = new FormData();\r\n\t\tfor (let key in data){\r\n\t\t\ttest.append(key,data[key]);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post(UpdateQuestionUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tAcceptQuestionService(data):Promise<UserQuestionResponseModel> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t\tlet test = new FormData();\r\n\t\ttest.append('id',data.id);\r\n\t\treturn this.http\r\n\t\t\t.post(AcceptedStatusQuestionUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\tRejectQuestionService(data):Promise<UserQuestionResponseModel> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t\tlet test = new FormData();\r\n\t\ttest.append('id',data.id);\r\n\t\treturn this.http\r\n\t\t\t.post(RejectedStatusQuestionUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tUpdateQuestionCategory(data):Promise<UpdateQuestionCategory> {\r\n\t\tthis.headers.delete('Content-Type');\r\n\t\tlet test = new FormData();\r\n\t\tfor (let key in data){\r\n\t\t\ttest.append(key,data[key]);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post(UpdateQuestionCategoryUrl,test, this.options)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(this.extractData)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tprivate  extractData(res: Response) {\r\n\t\tlet body = res.json();\r\n\t\tif (body.status == true) {\r\n\r\n\t\t\treturn body.data || [];\r\n\t\t} else {\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/cminer/cminer.service.ts","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport { ROLES } from './roles.model';\r\nimport {ProgressBarService} from \"../../core/progress-bar/progress-bar.service\";\r\nimport {NotificationsService} from \"angular2-notifications\";\r\nimport {\r\n\tSingleQuestionViewModel, UpdateQuestionCategory,\r\n\tUpdateQuestionModel,\r\n\tUserQuestionResponseModel,\r\n\tUserQuestionViewModel\r\n} from \"./question.model\";\r\nimport {SearchService} from \"../../user/search/search.service\";\r\nimport {CminerService} from \"../cminer.service\";\r\nimport {CATEGORIES} from \"../../shared/categories.model\";\r\n\r\n\r\n\r\n@Component({\r\n\tselector: 'app-question',\r\n\ttemplate: require('./question.component.html'),\r\n\tstyles: [ require('./question.component.css') ],\r\n\tencapsulation: ViewEncapsulation.None\r\n\r\n})\r\n\r\nexport class QuestionComponent implements OnInit {\r\n\t@ViewChild('autoCompelete') element;\r\n\t@ViewChild('search') input;\r\n\tpublic users:any;\r\n\tpublic showUserQuestionTable:boolean=false;\r\n\tpublic showSingleQuestionTable:boolean=false;\r\n\tpublic userQuestion = new UserQuestionViewModel();\r\n\tpublic userQuestionsData: any = [];\r\n\tpublic singleQuestionSearch = new SingleQuestionViewModel();\r\n\tpublic singleQuestionData :any =[];\r\n\tpublic cats = CATEGORIES;\r\n\tpublic updateQuestion = new UpdateQuestionModel();\r\n\tpublic updateCategory = new UpdateQuestionCategory();\r\n\r\n\r\n\tconstructor (\r\n\t\tprivate router: Router,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate progressBarService: ProgressBarService,\r\n\t\tprivate notificationService: NotificationsService,\r\n\t\tprivate searchService: SearchService,\r\n\t\tprivate cminerService: CminerService,\r\n        ) {\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.userQuestion.player_id= 0;\r\n\t}\r\n\r\n\tleven(name: string): void {\r\n\t\tthis.progressBarService.queryInProgress();\r\n\t\tthis.searchService.leven(name).then(\r\n\t\t\tusers => {\r\n\t\t\t\tthis.users = users;\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tthis.notificationService.error(\"خطا\", \"خطا در دریافت کاربران\");\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\tClearSeach(){\r\n\t\tthis.userQuestion.player_id = null;\r\n\t\tthis.singleQuestionSearch.id = null;\r\n\t\tthis.users = null;\r\n\t\tthis.userQuestionsData = [];\r\n\t\tthis.showUserQuestionTable = false;\r\n\t\tthis.showSingleQuestionTable = false;\r\n\t\tthis.singleQuestionData = [];\r\n\t\tthis.input.nativeElement.value = '';\r\n\t}\r\n\tSelectUser(id){\r\n\t\tthis.userQuestion.player_id = id;\r\n\t\tthis.users = null;\r\n\t\tthis.element.nativeElement.style.display = 'none';\r\n\t}\r\n\tSearchUserQuestions(){\r\n\t\tthis.cminerService.viewUserQuestionService(this.userQuestion)\r\n\t\t\t.then(s => {\r\n\t\t\t\tthis.userQuestionsData = s.question;\r\n\t\t\t\tthis.showUserQuestionTable = true;\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"سوالات کاربر یافت شد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\tSearchQuestionById(){\r\n\t\tthis.cminerService.SingleSearchQuestionService(this.singleQuestionSearch)\r\n\t\t\t.then(s => {\r\n\t\t\t\tthis.singleQuestionData = s;\r\n\t\t\t\tthis.updateCategory.question_id = s.question_details.id;\r\n\t\t\t\tthis.updateCategory.category_id = s.question_details.category_id;\r\n\t\t\t\tthis.showSingleQuestionTable = true;\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"سوالات یافت شد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\t  getCategory(id): string{\r\n\r\n\t\tlet val = '';\r\n\r\n\t\t this.cats.forEach(cat=>{\r\n\t\t\tif (cat.id == id){\r\n\r\n\t\t\t\tval= cat.title;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn val;\r\n\t}\r\n\r\n\ttransformToUpdate(){\r\n\t\t\tfor (let key in this.updateQuestion){\r\n\t\t\t\t\tthis.updateQuestion[key] = this.singleQuestionData.question_details[key];\r\n\t\t\t}\r\n\t}\r\n\tUpdateQuestionCrud(){\r\n\r\n\t\tthis.cminerService.UpdateQuestuinService(this.updateQuestion)\r\n\t\t\t.then(s => {\r\n\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"سوال بروز رسانی شد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t\tthis.UpdateQuestionCategory();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\r\n\tUpdateQuestionCategory(){\r\n\r\n\t\tthis.cminerService.UpdateQuestionCategory(this.updateCategory)\r\n\t\t\t.then(s => {\r\n\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"موضوع سوال تغییر کرد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t\tconsole.log(this.updateCategory)\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\r\n\tRejectQuestion(item){\r\n\r\n\t\tthis.cminerService.RejectQuestionService({id:item.id})\r\n\t\t\t.then(s => {\r\n\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"سوال ریجکت شد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t\tthis.StatusEvent(s['question_details'],true);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\r\n\tAcceptQuestion(item){\r\n\t\tthis.cminerService.AcceptQuestionService({id:item.id})\r\n\t\t\t.then(s => {\r\n\r\n\t\t\t\tthis.notificationService.success(\"Sucess\", \"سوال قبول شد\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t\tthis.StatusEvent(s['question_details'],true);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.notificationService.error(\"Error\", \"دوباره تلاش کنید\", { timeOut: 1500 });\r\n\t\t\t\tthis.progressBarService.queryFinished();\r\n\t\t\t});\r\n\t}\r\n\r\n\tStatusEvent(item,type):string{\r\n\r\n\t\tif (type){\r\n\t\t\tlet elem:Element = document.getElementById(\"el-\"+item.id);\r\n\r\n\r\n\t\t\tif (item.status == \"ACCEPTED\"){\r\n\t\t\t\telem.innerHTML = '<i  class=\"material-icons sticky-shortcut red-color\">check</i>';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telem.innerHTML = '<i  class=\"material-icons sticky-shortcut red-color\">close</i>';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn item.status;\r\n\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/cminer/question/question.component.ts","import { NgModule }             from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {QuestionComponent} from \"./question/question.component\";\r\nconst routes: Routes = [\r\n\r\n    { path: '', redirectTo: 'cminer-index', pathMatch: 'full'},\r\n    { path: 'cminer-index', component: QuestionComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CminerRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/cminer/cminer-routing.module.ts","\r\nexport class UserQuestionViewModel {\r\n\r\n    player_id:number;\r\n\r\n}\r\n\r\nexport class SingleQuestionViewModel {\r\n    id:number;\r\n}\r\n\r\nexport class UserQuestionResponseModel {\r\n\r\n    id:number;\r\n    question: string;\r\n    choice1: string;\r\n    choice2: string;\r\n    choice3: string;\r\n    choice4: string;\r\n    correct_answer: string;\r\n    status: string;\r\n    category_id: number;\r\n    question_details:any =null;\r\n}\r\nexport class UpdateQuestionModel {\r\n\r\n    id:number =null;\r\n    question: string =null;\r\n    choice1: string =null;\r\n    choice2: string =null;\r\n    choice3: string =null;\r\n    choice4: string =null;\r\n   \r\n\r\n}\r\nexport class UpdateQuestionCategory {\r\n\r\n    category_id:number = null;\r\n    question_id:number = null;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/cminer/question/question.model.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".batches-tab .tab{\\r\\n    font-size: 16px;\\r\\n}\\r\\nh3,.mat-ripple{\\r\\n    font-family: IRANSansWeb !important;\\r\\n}\\r\\n.question-content th,td{\\r\\n    font-family: IRANSansWeb !important;\\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n    font-size: 13px;\\r\\n\\r\\n}\\r\\n\\r\\n.question-content td:nth-child(3),.question-content td:nth-child(4), .question-content td:nth-child(5),.question-content td:nth-child(6){\\r\\n    background: #f8bbd0;\\r\\n}\\r\\ntd:nth-child(7){\\r\\n    background: #b2dfdb;\\r\\n}\\r\\n.question-content{\\r\\n    width: 100%;\\r\\n\\r\\n    margin: 40px auto;\\r\\n    overflow: auto;\\r\\n}\\r\\n.question-content th{\\r\\n    background: #e7e7e7;\\r\\n}\\r\\n.question-content td:hover{\\r\\n    background: #e9e9e9;\\r\\n}\\r\\n.input-holder{\\r\\n    padding: 0 40px;\\r\\n\\r\\n}\\r\\n.d-inline-block{\\r\\n    display: inline-block;\\r\\n}\\r\\n.margin-right-20{\\r\\n    margin-right: 20px;\\r\\n}\\r\\n.radio-holder-batch{\\r\\n    margin-bottom: 10px;\\r\\n    display: inline-block;\\r\\n}\\r\\n.myAutoComplete{\\r\\n    background: white;\\r\\n    width: 300px;\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    z-index: 1000;\\r\\n    top: 35px;\\r\\n    overflow: auto;\\r\\n    height: 200px;\\r\\n    box-shadow:0 3px 6px rgba(0,0,0,0.16);\\r\\n}\\r\\n.user-list{\\r\\n    padding: 0;\\r\\n}\\r\\n.hoverable{\\r\\n    list-style: none;\\r\\n    padding: 10px;\\r\\n}\\r\\n.hoverable:hover{\\r\\n    background: #e4e4e4;\\r\\n}\\r\\n.margin-top-fix{\\r\\n    margin-top: 30px;\\r\\n}\\r\\n.show-id{\\r\\n    background: mediumseagreen;\\r\\n    padding: 10px;\\r\\n    color: #fff;\\r\\n    width: 20%;\\r\\n    margin: 0 0 20px 0;\\r\\n}\\r\\n.text-center{\\r\\n    text-align: center;\\r\\n}\\r\\n.text-right{\\r\\n    text-align: right;\\r\\n}\\r\\n.batch-inner{\\r\\n    padding: 0 10px;\\r\\n}\\r\\n.card-parent{\\r\\n    min-height: 500px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/cminer/question/question.component.css\n// module id = 577\n// module chunks = 8","module.exports = \"\\r\\n<md-tab-group class=\\\"tab-container batches-tab\\\">\\r\\n    <md-tab class=\\\"tabs\\\" label=\\\"جستجو سوالات کاربر\\\">\\r\\n\\r\\n      <md-card class=\\\"card-content card-parent\\\">\\r\\n          <md-list>\\r\\n              <div class=\\\"card-content d-inline-block margin-padding-right-10\\\">\\r\\n                  <md-input-container class=\\\"input-full-width\\\">\\r\\n                      <input mdInput [value]=\\\"userQuestion.player_id\\\" placeholder=\\\"آیدی بازیکن انتخاب شده\\\" readonly>\\r\\n                  </md-input-container>\\r\\n\\r\\n                  <md-input-container class=\\\"input-full-width\\\">\\r\\n                      <input #search matInput autocomplete=\\\"off\\\" (keyup)=\\\"leven(search.value)\\\" placeholder=\\\"جستجو نام کاربر\\\">\\r\\n                      <div class=\\\"myAutoComplete\\\" *ngIf=\\\"users\\\" #autoCompelete>\\r\\n                          <ul class=\\\"user-list\\\">\\r\\n                              <li class=\\\"hoverable\\\" *ngFor=\\\"let user of users \\\" (click)=\\\"SelectUser(user.user_id)\\\">\\r\\n                                  <span>{{ user.username }}</span>\\r\\n                              </li>\\r\\n                          </ul>\\r\\n                      </div>\\r\\n\\r\\n                  </md-input-container>\\r\\n                  <button [disabled]=\\\"!userQuestion.player_id\\\" class=\\\"btn\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"SearchUserQuestions()\\\">\\r\\n                     جستجو سولات کاربر\\r\\n                  </button>\\r\\n                  <button [disabled]=\\\"!userQuestionsData.length\\\"  class=\\\"btn\\\" md-raised-button color=\\\"warn\\\" (click)=\\\"ClearSeach()\\\">\\r\\n                      جستجو جدید\\r\\n                  </button>\\r\\n              </div>\\r\\n\\r\\n          </md-list>\\r\\n\\r\\n          <md-list *ngIf=\\\"showUserQuestionTable\\\">\\r\\n              <div class=\\\"batch-inner\\\">\\r\\n\\r\\n\\r\\n                  <div class=\\\"question-content\\\" >\\r\\n                      <table class=\\\"batch-table\\\" style=\\\"width:100%\\\">\\r\\n                          <tr>\\r\\n\\r\\n                              <th>شماره</th>\\r\\n                              <th>سوال</th>\\r\\n                              <th>گزینه 1</th>\\r\\n                              <th>گزینه 2</th>\\r\\n                              <th>گزینه 3</th>\\r\\n                              <th>گزینه 4</th>\\r\\n                              <th>پاسخ صحیح</th>\\r\\n                              <th>رد کردن</th>\\r\\n                              <th>قبول کردن</th>\\r\\n                              <th>وضعیت کنونی</th>\\r\\n                              <th>دسته سوال</th>\\r\\n\\r\\n                          </tr>\\r\\n\\r\\n                          <tr *ngFor=\\\"let data of userQuestionsData;\\\">\\r\\n\\r\\n                              <td>{{data.id}}</td>\\r\\n                              <td>{{data.question}}</td>\\r\\n                              <td>\\r\\n                                 {{data.choice1}}\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                 {{data.choice2}}\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                 {{data.choice3}}\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                  {{data.choice4}}\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                  {{data.correct_answer}}\\r\\n                              </td>\\r\\n                              <td>\\r\\n\\r\\n                                  <button (click)=\\\"RejectQuestion(data)\\\" class=\\\"btn\\\" md-raised-button color=\\\"warn\\\">\\r\\n                                    رد کردن سوال\\r\\n                                  </button>\\r\\n                              </td>\\r\\n                              <td>\\r\\n\\r\\n                                  <button (click)=\\\"AcceptQuestion(data)\\\" class=\\\"btn\\\" md-raised-button color=\\\"primary\\\">\\r\\n                                     قبول کردن سوال\\r\\n                                  </button>\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                  <span id=\\\"el-{{data.id}}\\\">\\r\\n                                       <i *ngIf=\\\"StatusEvent(data,false) == 'REJECTED'\\\" class=\\\"material-icons sticky-shortcut red-color\\\">close</i>\\r\\n                                       <i *ngIf=\\\"StatusEvent(data,false) == 'ACCEPTED'\\\" class=\\\"material-icons sticky-shortcut red-color\\\">check</i>\\r\\n\\r\\n                                  </span>\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                  {{getCategory(data.category_id)}}\\r\\n                              </td>\\r\\n                          </tr>\\r\\n                      </table>\\r\\n                  </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n          </md-list>\\r\\n      </md-card>\\r\\n\\r\\n    </md-tab>\\r\\n\\r\\n    <md-tab class=\\\"tabs\\\" label=\\\"جستجو سوال\\\">\\r\\n\\r\\n        <md-card class=\\\"card-content card-parent\\\">\\r\\n            <md-list>\\r\\n                <div class=\\\"card-content d-inline-block margin-padding-right-10\\\">\\r\\n                    <md-input-container class=\\\"input-full-width\\\">\\r\\n                        <input mdInput type=\\\"number\\\" [(ngModel)]=\\\"singleQuestionSearch.id\\\" placeholder=\\\"آیدی سوال\\\">\\r\\n                    </md-input-container>\\r\\n\\r\\n                    <button [disabled]=\\\"!singleQuestionSearch.id\\\" class=\\\"btn\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"SearchQuestionById()\\\">\\r\\n                         جستجو سوال\\r\\n                    </button>\\r\\n                    <button [disabled]=\\\"!singleQuestionData.question_details\\\"  class=\\\"btn\\\" md-raised-button color=\\\"warn\\\" (click)=\\\"ClearSeach()\\\">\\r\\n                        جستجو جدید\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n            </md-list>\\r\\n\\r\\n            <md-list *ngIf=\\\"showSingleQuestionTable\\\">\\r\\n                <div class=\\\"batch-inner\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"question-content\\\" >\\r\\n                        <table class=\\\"batch-table\\\" style=\\\"width:100%\\\">\\r\\n                            <tr>\\r\\n                                <th>شماره</th>\\r\\n                                <th>سوال</th>\\r\\n                                <th>گزینه 1</th>\\r\\n                                <th>گزینه 2</th>\\r\\n                                <th>گزینه 3</th>\\r\\n                                <th>گزینه 4</th>\\r\\n                                <th>پاسخ صحیح</th>\\r\\n                                <th>وضعیت</th>\\r\\n                                <th>دسته سوال</th>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{singleQuestionData.question_details.id}}</td>\\r\\n                                <td>\\r\\n                                    <mat-input-container>\\r\\n                                        <input mdInput type=\\\"text\\\" (keyup)=\\\"transformToUpdate()\\\" [(ngModel)]=\\\"singleQuestionData.question_details.question\\\">\\r\\n                                    </mat-input-container>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <mat-input-container>\\r\\n                                        <input mdInput type=\\\"text\\\" (keyup)=\\\"transformToUpdate()\\\" [(ngModel)]=\\\"singleQuestionData.question_details.choice1\\\">\\r\\n                                    </mat-input-container>\\r\\n\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <mat-input-container>\\r\\n                                        <input mdInput type=\\\"text\\\" (keyup)=\\\"transformToUpdate()\\\" [(ngModel)]=\\\"singleQuestionData.question_details.choice2\\\">\\r\\n                                    </mat-input-container>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <mat-input-container>\\r\\n                                        <input mdInput type=\\\"text\\\" (keyup)=\\\"transformToUpdate()\\\" [(ngModel)]=\\\"singleQuestionData.question_details.choice3\\\">\\r\\n                                    </mat-input-container>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <mat-input-container>\\r\\n                                        <input mdInput type=\\\"text\\\" (keyup)=\\\"transformToUpdate()\\\" [(ngModel)]=\\\"singleQuestionData.question_details.choice4\\\">\\r\\n                                    </mat-input-container>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                  {{singleQuestionData.question_details.correct_answer}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <i *ngIf=\\\"singleQuestionData.question_details.status == 'REJECTED'\\\" class=\\\"material-icons sticky-shortcut red-color\\\">close</i>\\r\\n                                    <i *ngIf=\\\"singleQuestionData.question_details.status == 'ACCEPTED'\\\" class=\\\"material-icons sticky-shortcut red-color\\\">check</i>\\r\\n\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <md-select  (change)=\\\"transformToUpdate()\\\"  mdInput [(ngModel)]=\\\"updateCategory.category_id\\\" placeholder=\\\"موضوع\\\"  class=\\\"input-full-width text-right\\\" name=\\\"status\\\">\\r\\n                                        <md-option *ngFor=\\\"let cat of this.cats\\\" [value]=\\\"cat.id\\\" >\\r\\n                                            {{cat.title}}\\r\\n                                        </md-option>\\r\\n                                    </md-select>\\r\\n\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </md-list>\\r\\n            <button *ngIf=\\\"showSingleQuestionTable\\\" [disabled]=\\\"updateQuestion.id == null\\\"  class=\\\"btn margin-right-20\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"UpdateQuestionCrud()\\\">\\r\\n                بروز رسانی\\r\\n            </button>\\r\\n        </md-card>\\r\\n    </md-tab>\\r\\n\\r\\n\\r\\n</md-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cminer/question/question.component.html\n// module id = 617\n// module chunks = 8","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!./question.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cminer/question/question.component.css\n// module id = 651\n// module chunks = 8"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AAAA;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChEA;AACA;AAGA;AAGA;AADA;AAGA;AACA;AAiDA;AA/CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AApDA;AADA;AACA;AAAA;;;;;;;;;ACAA;AAAA;AACA;AAMA;AAMA;AAMA;AAMA;;;;;;;;;;;;;;;;;AChCA;AACA;AAKA;AAQA;AAEA;AAGA;AAIA;AAAA;AAHA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AA9EA;AADA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AAWA;AAIA;AAAA;AAHA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvFA;AADA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAYA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAjpLA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAFA;AARA;AACA;AACA;AACA;AACA;AAEA;AAkBA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;;AAEA;AAAA;AAEA;AAAA;AAAA;;AAEA;AAAA;AAWA;AACA;AAAA;AAAA;;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}